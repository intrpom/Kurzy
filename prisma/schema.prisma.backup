// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model pro kurzy
model Course {
  id          String    @id @default(cuid())
  slug        String    @unique
  title       String
  subtitle    String?
  description String    @db.Text
  imageUrl    String?
  price       Float     @default(0)
  isFeatured  Boolean   @default(false)
  level       String?   // beginner, intermediate, advanced
  tags        String[]  // pole tagů
  progress    Int?      // procento dokončení (0-100)
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  modules     Module[]  // vztah k modulům
  userCourses UserCourse[] // vztah k uživatelům
}

// Model pro moduly kurzu
model Module {
  id          String    @id @default(cuid())
  title       String
  description String?   @db.Text
  order       Int       // pořadí modulu v kurzu
  completed   Boolean   @default(false)
  course      Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId    String
  lessons     Lesson[]  // vztah k lekcím
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Model pro lekce
model Lesson {
  id          String    @id @default(cuid())
  title       String
  description String?   @db.Text
  duration    Int       // v minutách
  videoUrl    String?
  order       Int       // pořadí lekce v modulu
  completed   Boolean   @default(false)
  module      Module    @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  moduleId    String
  materials   Material[] // vztah k materiálům
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Model pro materiály k lekcím
model Material {
  id          String    @id @default(cuid())
  title       String
  type        String    // pdf, audio, link, text
  url         String?
  content     String?   @db.Text
  lesson      Lesson    @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  lessonId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Model pro uživatele
model User {
  id          String    @id @default(cuid())
  email       String    @unique
  name        String?
  role        String    @default("user") // user, admin
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  tokens      AuthToken[] // vztah k autentikačním tokenům
  userCourses UserCourse[] // vztah ke kurzům uživatele
}

// Model pro autentikační tokeny (magic links)
model AuthToken {
  id          String    @id @default(cuid())
  token       String    @unique
  expires     DateTime
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime  @default(now())
}

// Model pro vztah mezi uživatelem a kurzem
model UserCourse {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  course      Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId    String
  progress    Int       @default(0) // procento dokončení (0-100)
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  @@unique([userId, courseId]) // jeden uživatel může mít kurz pouze jednou
}
